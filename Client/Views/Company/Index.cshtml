@using Client.Utilities.Enums;
@using Newtonsoft.Json;
@using System.Security.Claims;

@model List<Client.DTOs.Companies.GetCompanyMasterDto>

@{
    // JWT Parse
    var role = User!.Claims!.FirstOrDefault(c => c.Type == ClaimTypes.Role)!.Value;

    var toast = TempData["toast"] as dynamic;

    ViewData["Title"] = "Company List";
    Layout = "_LayoutUser";
}

@section Filter{
    
}

@section Toast{
    @if (toast != null)
    {
        var toastColor = toast.Color ?? "secondary";
        var toastClass = $"bs-toast toast toast-placement-ex m-2 fade bg-{toastColor} top-0 start-50 translate-middle-x";

        <div class="@toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
            <div class="toast-header">
                <i class="bx bx-bell me-2"></i>
                <div class="me-auto fw-semibold">@toast.Title</div>
            </div>
            <div class="toast-body">
                @toast.Subtitle
            </div>
        </div>
    }
}

<div class="col-12">
    <div class="card">
        <div class="p-3">
            <div class="table-responsive">
                <table id="data" class="table w-100 table-hover"></table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const dataSource = @Html.Raw(JsonConvert.SerializeObject(Model));
        var role = "@role";
        var sysAdmin = "@RoleLevel.SysAdmin.ToString()";

        $(document).ready(function () {
            if(role == sysAdmin){
                var dataTable = $('#data').DataTable({
                    data: dataSource,
                    columns: [
                        { title: 'Company Name', data: 'Name' },
                        { title: 'Phone', data: 'PhoneNumber' },
                        { title: 'Address', data: 'Address' },
                        { title: 'Email', data: 'Email' },
                        {
                            title: 'Action',
                            data: null,
                            render: function (data, type, row) {
                                console.log(data.IsActive);
                                if (data.IsActive) {
                                    return '<div class="text-center"><button id="deactive-btn-' + data.AccountGuid + '" class="btn btn-sm btn-danger me-2" onclick="deactivateCompany(this, \'' + data.AccountGuid + '\')"><i class="bx bx-x-circle"></i> Deactivate </button></div>';
                                }
                                else {
                                    return '<div class="text-center"><button id="activate-btn-' + data.AccountGuid + '" class="btn btn-sm btn-success me-2" onclick="activateCompany(this, \'' + data.AccountGuid + '\')"><i class="bx bx-check"></i> Activate </button></div>';
                                }
                            }
                        }
                    ]
                });
            }
            else{
                var dataTable = $('#data').DataTable({
                    data: dataSource,
                    columns: [
                        { title: 'Company Name', data: 'Name' },
                        { title: 'Phone', data: 'PhoneNumber' },
                        { title: 'Address', data: 'Address' },
                        { title: 'Email', data: 'Email' }
                    ]
                });
            }
        });
    </script>
}