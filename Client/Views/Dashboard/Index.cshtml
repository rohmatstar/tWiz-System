@using Client.Utilities.Enums;
@using System.Security.Claims
@{
    var jwtToken = Context.Session.GetString("JWTToken")!.ToString();
    var toast = TempData["toast"] as dynamic;
    var role = User!.Claims!.FirstOrDefault(c => c.Type == ClaimTypes.Role)!.Value;

    ViewData["Title"] = "Dashboard";
    Layout = "_LayoutUser";
}

@section Toast{
    @if (toast != null)
    {
        var toastColor = toast.Color ?? "secondary";
        var toastClass = $"bs-toast toast toast-placement-ex m-2 fade bg-{toastColor} top-0 start-50 translate-middle-x";

        <div class="@toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
            <div class="toast-header">
                <i class="bx bx-bell me-2"></i>
                <div class="me-auto fw-semibold">@toast.Title</div>
            </div>
            <div class="toast-body">
                @toast.Subtitle
            </div>
        </div>
    }
}

@if(role != RoleLevel.SysAdmin.ToString()){
    <div class="col-12">
        <div class="card bg-white">
            <div class="card-body text-center d-flex justify-content-center align-items-center">
                <img src="~/assets/img/welcome.png" class="d-block w-100"/>
            </div>
        </div>
    </div>
}
else{


<!-- Quick Statistic -->
<div class="col-12 mb-4">
    <div class="card">
        <div class="row row-bordered g-0">
            <div class="col-12">
                <h5 class="card-header m-0 me-2 pb-3">Event Counter Statistic</h5>
                <div id="totalRevenueChart" class="px-2"><div class="text-center mb-3">Loading...</div></div>
            </div>
            @*<div class="col-md-4">
                <div class="card-body">
                    <div class="text-center">
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-primary dropdown-toggle"
                                    type="button"
                                    id="growthReportId"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                2022
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="growthReportId">
                                <a class="dropdown-item" href="javascript:void(0);">2021</a>
                                <a class="dropdown-item" href="javascript:void(0);">2020</a>
                                <a class="dropdown-item" href="javascript:void(0);">2019</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="growthChart"></div>
                <div class="text-center fw-semibold pt-3 mb-2"><span id="growth-value">0</span>% Average Growth</div>

                <div class="d-flex px-xxl-4 px-lg-2 p-4 gap-xxl-3 gap-lg-1 gap-3 justify-content-between">
                    <div class="d-flex">
                        <div class="me-2">
                            <span class="badge bg-label-primary p-2"><i class="bx bx-group text-primary"></i></span>
                        </div>
                        <div class="d-flex flex-column">
                            <small>Employee</small>
                            <h6 class="mb-0"><span id="employee-total">0</span></h6>
                        </div>
                    </div>
                    <div class="d-flex">
                        <div class="me-2">
                            <span class="badge bg-label-info p-2"><i class="bx bx-cube text-info"></i></span>
                        </div>
                        <div class="d-flex flex-column">
                            <small>Events</small>
                            <h6 class="mb-0"><span id="event-total">0</span></h6>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
</div>
<!--/ Total Revenue -->
<div class="d-none col-12 col-md-8 col-lg-4 order-3 order-md-2">
    <div class="row">
        <div class="col-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="card-title d-flex align-items-start justify-content-between">
                        <div class="avatar flex-shrink-0">
                            <span class="badge bg-label-info p-2">
                                <i class="bx bx-group text-info"></i>
                            </span>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="cardOpt1"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu" aria-labelledby="cardOpt1">
                                <a class="dropdown-item" href="#">View More</a>
                            </div>
                        </div>
                    </div>
                    <span class="fw-semibold d-block mb-1">Employees</span>
                    <h3 class="card-title mb-2" id="employee-summary">0</h3>
                    <small class="text-success fw-semibold"><i class="bx bx-up-arrow-alt"></i> <span id="employee-summary-percent">0</span>%</small>
                </div>
            </div>
        </div>
        <div class="col-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="card-title d-flex align-items-start justify-content-between">
                        <div class="avatar flex-shrink-0">
                            <span class="badge bg-label-danger p-2">
                                <i class="bx bx-cube text-danger"></i>
                            </span>
                        </div>
                        <div class="dropdown">
                            <button class="btn p-0"
                                    type="button"
                                    id="cardOpt4"
                                    data-bs-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt4">
                                <a class="dropdown-item" href="javascript:void(0);">View More</a>
                            </div>
                        </div>
                    </div>
                    <span class="d-block mb-1">Events</span>
                    <h3 class="card-title text-nowrap mb-2"><span id="event-summary">0</span></h3>
                    <small class="text-success fw-semibold"><i class="bx bx-up-arrow-alt"></i> <span id="event-summary-percent">0</span>%</small>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between flex-sm-row flex-column gap-3">
                        <div class="d-flex flex-sm-column flex-row align-items-start justify-content-between">
                            <div class="card-title">
                                <h5 class="text-nowrap mb-2">Payments</h5>
                                <span class="badge bg-label-warning rounded-pill">Year <span id="summary-year">0</span></span>
                            </div>
                            <div class="mt-sm-auto">
                                <small class="text-success text-nowrap fw-semibold"><i class="bx bx-chevron-up"></i> <span id="payment-summary-percent">0</span>%</small>
                                <h3 class="mb-0">IDR<span id="payment-summary">0</span></h3>
                            </div>
                        </div>
                        <div id="profileReportChart"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



}

@section Scripts {
    <script type="text/javascript">

        'use strict';

        (function () {
            $.ajax({
                url: 'https://localhost:7249/api/events/statistic',
                method: 'GET',
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer ' + "@jwtToken"
                },
                success: function (response) {
                    if (response.code == 200) {
                        console.log(response);
                            var eventCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                            response.data.forEach(event => {
                              const start_date = parseInt(event.startDate);
                              console.log("startdate", start_date)
                              const event_index = start_date - 1;
                              console.log("event_index", event_index)
                              eventCount[event_index] += 1;
                            console.log("Event: ", eventCount, "Index:", eventCount[event_index]);
                            });

                            console.log(event)

                            const data = {
                                "year": "2022",
                                "revenue": {
                                    "company": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // jumlah employee pada masing2 bulan
                                "event": eventCount, // jumlah event pada masing2 bulan
                                    "months": ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] // 7 Bulan terakhir
                                },
                                "growth": {
                                    "value": [62],
                                    "label": ["Growth"]
                                },
                                "total": {
                                    "company": 645,
                                    "event": 749
                                }
                            };

                            let cardColor, headingColor, axisColor, shadeColor, borderColor;

                            cardColor = config.colors.white;
                            headingColor = config.colors.headingColor;
                            axisColor = config.colors.axisColor;
                            borderColor = config.colors.borderColor;

                            // Total Revenue Report Chart - Bar Chart
                            // --------------------------------------------------------------------
                            const totalRevenueChartEl = document.querySelector('#totalRevenueChart'),
                                totalRevenueChartOptions = {
                                    series: [
                                        {
                                            name: 'Companies',
                                            data: data.revenue.company
                                        },
                                        {
                                            name: 'Events',
                                            data: data.revenue.event
                                        }
                                    ],
                                    chart: {
                                        height: 300,
                                        stacked: true,
                                        type: 'bar',
                                        toolbar: { show: false }
                                    },
                                    plotOptions: {
                                        bar: {
                                            horizontal: false,
                                            columnWidth: '33%',
                                            borderRadius: 12,
                                            startingShape: 'rounded',
                                            endingShape: 'rounded'
                                        }
                                    },
                                    colors: [config.colors.primary, config.colors.info],
                                    dataLabels: {
                                        enabled: false
                                    },
                                    stroke: {
                                        curve: 'smooth',
                                        width: 6,
                                        lineCap: 'round',
                                        colors: [cardColor]
                                    },
                                    legend: {
                                        show: false,
                                        horizontalAlign: 'left',
                                        position: 'top',
                                        markers: {
                                            height: 8,
                                            width: 8,
                                            radius: 12,
                                            offsetX: -3
                                        },
                                        labels: {
                                            colors: axisColor
                                        },
                                        itemMargin: {
                                            horizontal: 10
                                        }
                                    },
                                    grid: {
                                        borderColor: borderColor,
                                        padding: {
                                            top: 0,
                                            bottom: -8,
                                            left: 20,
                                            right: 20
                                        }
                                    },
                                    xaxis: {
                                        categories: data.revenue.months,
                                        labels: {
                                            style: {
                                                fontSize: '13px',
                                                colors: axisColor
                                            }
                                        },
                                        axisTicks: {
                                            show: false
                                        },
                                        axisBorder: {
                                            show: false
                                        }
                                    },
                                    yaxis: {
                                        show: false,
                                        labels: {
                                            style: {
                                                fontSize: '13px',
                                                colors: axisColor
                                            }
                                        }
                                    },
                                    responsive: [
                                        {
                                            breakpoint: 1700,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '32%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 1580,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '35%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 1440,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '42%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 1300,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '48%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 1200,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '40%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 1040,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 11,
                                                        columnWidth: '48%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 991,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '30%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 840,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '35%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 768,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '28%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 640,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '32%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 576,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '37%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 480,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '45%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 420,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '52%'
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            breakpoint: 380,
                                            options: {
                                                plotOptions: {
                                                    bar: {
                                                        borderRadius: 10,
                                                        columnWidth: '60%'
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    states: {
                                        hover: {
                                            filter: {
                                                type: 'none'
                                            }
                                        },
                                        active: {
                                            filter: {
                                                type: 'none'
                                            }
                                        }
                                    }
                                };
                            if (typeof totalRevenueChartEl !== undefined && totalRevenueChartEl !== null) {
                                const totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);
                                $("#totalRevenueChart").html("");
                                totalRevenueChart.render();
                            }

                            // Growth Chart - Radial Bar Chart
                            // --------------------------------------------------------------------
                            const growthChartEl = document.querySelector('#growthChart'),
                                growthChartOptions = {
                                    series: data.growth.value,
                                    labels: data.growth.label,
                                    chart: {
                                        height: 240,
                                        type: 'radialBar'
                                    },
                                    plotOptions: {
                                        radialBar: {
                                            size: 150,
                                            offsetY: 10,
                                            startAngle: -150,
                                            endAngle: 150,
                                            hollow: {
                                                size: '55%'
                                            },
                                            track: {
                                                background: cardColor,
                                                strokeWidth: '100%'
                                            },
                                            dataLabels: {
                                                name: {
                                                    offsetY: 15,
                                                    color: headingColor,
                                                    fontSize: '15px',
                                                    fontWeight: '600',
                                                    fontFamily: 'Public Sans'
                                                },
                                                value: {
                                                    offsetY: -25,
                                                    color: headingColor,
                                                    fontSize: '22px',
                                                    fontWeight: '500',
                                                    fontFamily: 'Public Sans'
                                                }
                                            }
                                        }
                                    },
                                    colors: [config.colors.primary],
                                    fill: {
                                        type: 'gradient',
                                        gradient: {
                                            shade: 'dark',
                                            shadeIntensity: 0.5,
                                            gradientToColors: [config.colors.primary],
                                            inverseColors: true,
                                            opacityFrom: 1,
                                            opacityTo: 0.6,
                                            stops: [30, 70, 100]
                                        }
                                    },
                                    stroke: {
                                        dashArray: 5
                                    },
                                    grid: {
                                        padding: {
                                            top: -35,
                                            bottom: -10
                                        }
                                    },
                                    states: {
                                        hover: {
                                            filter: {
                                                type: 'none'
                                            }
                                        },
                                        active: {
                                            filter: {
                                                type: 'none'
                                            }
                                        }
                                    }
                                };
                            if (typeof growthChartEl !== undefined && growthChartEl !== null) {
                                const growthChart = new ApexCharts(growthChartEl, growthChartOptions);
                                growthChart.render();
                            }

                            
                    }
                    else {
                        console.error("Error");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error("Error:", jqXHR, textStatus, errorThrown);
                }
            });
        })();
    </script>
}