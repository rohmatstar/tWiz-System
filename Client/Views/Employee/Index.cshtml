@using Client.Utilities.Enums;
@using System.Security.Claims;
@{
    var jwtToken = Context.Session.GetString("JWTToken")!.ToString();
    var companyGuid = User!.Claims!.FirstOrDefault(c => c.Type == "companyGuid")!.Value;
    var toast = TempData["toast"] as dynamic;

    ViewData["Title"] = "Employee List";
    Layout = "_LayoutUser";
}

@section Filter{
    
}

@section Toast{
    @if (toast != null)
    {
        var toastColor = toast.Color ?? "secondary";
        var toastClass = $"bs-toast toast toast-placement-ex m-2 fade bg-{toastColor} top-0 start-50 translate-middle-x";

        <div class="@toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
            <div class="toast-header">
                <i class="bx bx-bell me-2"></i>
                <div class="me-auto fw-semibold">@toast.Title</div>
            </div>
            <div class="toast-body">
                @toast.Subtitle
            </div>
        </div>
    }
}

<div class="col-12">
    <div class="card">
        <div class="p-3">
            <div class="table-responsive">
                <table id="data" class="table w-100 table-hover"></table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var companyGuid = "@companyGuid";
            $.ajax({
                url: 'https://localhost:7249/api/employees/company/' + companyGuid,
                method: 'GET',
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer ' + "@jwtToken"
                },
                success: function(response) {
                    $('#data').DataTable({
                        data: response.data,
                        columns: [
                            { title: 'NIK', data: 'nik' },
                            {
                                title: 'Name',
                                data: null,
                                render: function (data, type, row){
                                    return '<div class="text-capitalize">' +data.fullName+ '</div>';
                                }
                            },
                            //{ title: 'Birth Date', data: 'birthDate' },
                            {
                                title: 'Gender',
                                data: null,
                                render: function (data, type, row) {
                                    return '<div class="text-capitalize">' + data.gender + '</div>';
                                }
                            },
                            {
                                title: 'Hired Date',
                                data: null, 
                                render: function (data, type, row){
                                    return data.hiringDate.split(",")[0];
                                }
                            },
                            //{ title: 'Phone Number', data: 'phoneNumber' },
                            {
                                title: 'Contact',
                                data: null,
                                render: function (data, type, row){
                                    return '<div><i class="bx bx-phone"></i> <a href="tel:' + data.phoneNumber +
                                        '">+' +data.phoneNumber+ '</a></div><div><i class="bx bx-envelope"></i> <a href="mailto:' + data.email + '">'+data.email+'</a></div>';
                                }
                            },
                            {
                                title: 'Action',
                                data: null,
                                render: function (data, type, row) {
                                    return `<div class="btn-group">
                              <button
                                type="button"
                                class="btn btn-outline-primary text-primary bg-white btn-sm dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false"
                              >
                                Options
                              </button>
                              <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="javascript:void(0);"><i class="bx bx-edit-alt"></i> Edit</a></li>
                                        <li><a class="dropdown-item" href="javascript:void(0);"><i class="bx bx-trash"></i> Delete</a></li>
                                <li>
                                  <hr class="dropdown-divider" />
                                </li>
                                        <li><a class="dropdown-item" href="javascript:void(0);"><i class="bx bx-dots-horizontal"></i> Details</a></li>
                              </ul>
                            </div>`;
                                }
                            }
                        ]
                    });
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error("Error:", textStatus, errorThrown);
                }
            });
        });
    </script>
}