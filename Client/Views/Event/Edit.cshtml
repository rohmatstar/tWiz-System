@model Client.DTOs.Events.GetEventDto;

@{
    ViewData["Title"] = "Edit Event";
    Layout = "_LayoutUser";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" class="text-primary">Events Control</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>



<div class="col-12">
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h5 class="mb-4">Event Information</h5>
                    <div class="mb-3 row">
                        <label for="event-name" class="col-md-4 col-form-label">Event Name</label>
                        <div class="col-md-8">
                            <input class="form-control" autofocus type="text" value="@Model.Name" id="event-name" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="thumbnail" class="col-md-4 col-form-label">Thumbnail</label>
                        <div class="col-md-8">
                            <input class="form-control" type="file" id="thumbnail" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="description" class="col-md-4 col-form-label">Description</label>
                        <div class="col-md-8">
                            <textarea class="form-control" id="description" rows="4" value="">@Model.Description</textarea>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="visibility" class="col-md-4 col-form-label">Event Type</label>
                        <div class="col-md-8">
                            <select class="form-select" id="visibility">
                                <option value="public">Public</option>
                                <option value="private">Private</option>
                            </select>
                            <div class="form-text text-primary">
                                If you choose 'Private', you'll have to insert the participant before publilshing
                            </div>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="category" class="col-md-4 col-form-label">Category</label>
                        <div class="col-md-8">
                            <input class="form-control" type="text" value="@Model.Category" id="category" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="quota" class="col-md-4 col-form-label">Quota</label>
                        <div class="col-md-8">
                            <input class="form-control" type="number" min="0" value="@(Model.Quota)" id="quota" />
                        </div>
                    </div>
                </div>

                <div class="col-md-6 ps-4">
                    <h5 class="mb-4">Event Date</h5>
                    <div class="mb-3 row">
                        <label for="start-date" class="col-md-4 col-form-label">Start Date</label>
                        <div class="col-md-8">
                            <input class="form-control" type="datetime-local" id="start-date" value="@(Model.StartDate)" />
                        </div>
                    </div>

                    <div class="mb-5 row">
                        <label for="end-date" class="col-md-4 col-form-label">End Date</label>
                        <div class="col-md-8">
                            <input class="form-control" type="datetime-local" id="end-date" value="@(Model.EndDate)" />
                        </div>
                    </div>

                    <h5>Payment Information & Status</h5>
                    <div class="mb-3 row">
                        <label class="col-md-4 col-form-label">Payment</label>
                        <div class="col-md-8">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="event-pay" id="event-pay-free" value="free" @(Model.Payment == "free"? "checked":"")>
                                <label class="form-check-label" for="event-pay-free">Free</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="event-pay" id="event-pay-paid" value="paid" @(Model.Payment == "paid" ? "checked" : "")>
                                <label class="form-check-label" for="event-pay-paid">Paid</label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="price" class="col-md-4 col-form-label">Price</label>
                        <div class="col-md-8">
                            <input class="form-control" type="number" min="0" value="@((int)Model.Price)" id="price" @(Model.Payment == "paid" ? "" : "disabled") />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="place-type" class="col-md-4 col-form-label">Place Type</label>
                        <div class="col-md-8">
                            <select class="form-select" id="place-type">
                                <option value="online">Online</option>
                                <option value="offline">Offline</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="place" class="col-md-4 col-form-label">Place</label>
                        <div class="col-md-8">
                            <input class="form-control" type="text" id="place" value="@Model.Place" />
                        </div>
                    </div>

                </div>
            </div>
            <div class="card-footer border-top p-0 pt-3 text-end">
                <div class="btn-group">
                    <button type="submit" class="btn btn-outline-primary bg-white text-primary" id="btn-submit">Update</button>
                    <!--
                        <button type="button"
                            class="btn btn-outline-primary bg-white text-primary dropdown-toggle dropdown-toggle-split"
                            id="dropdownMenuReference"
                            data-bs-toggle="dropdown"
                            aria-expanded="false"
                            data-bs-reference="parent">
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuReference">
                            <li>
                                <div class="dropdown-item">
                                    <button type="submit" class="btn btn-primary">Save and Add Participant</button>
                                </div>
                            </li>
                        </ul>
                    -->
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts{
    <script>
        const btnSubmitElem = document.getElementById("btn-submit");

        console.log("@(ViewData["token"])");



        $('input[type="radio"][name="event-pay"]').on('change', function () {
            // Get the value of the selected radio button
            const selectedValue = $(this).val();

            // Get the target input element
            const textInput = $('#price');

            // Toggle the disabled attribute based on the selected radio button value
            if (selectedValue === 'free') {
                textInput.prop('disabled', true);
                textInput.val("0");
            } else {
                textInput.prop('disabled', false);
            }
        });
        btnSubmitElem.addEventListener("click", function (e) {

            e.preventDefault();
            console.log($('input[type=file]').val());

            const fileElem = document.getElementById("thumbnail");
            const file = fileElem.files[0];

            console.log($("input[name='event-pay']:checked").val());

            const formData = new FormData();
            formData.append('ThumbnailFile', file);
            formData.append("Name", $("#event-name").val());
            formData.append("Description", $("#description").val());
            formData.append("Visibility", $("#visibility").val());
            formData.append("Payment", $("input[name='event-pay']:checked").val());
            formData.append("Price", $("#price").val() ?? "0");
            formData.append("Category", $("#category").val());
            formData.append("PlaceType", $("#place-type").val());
            formData.append("StartDate", $("#start-date").val());
            formData.append("EndDate", $("#end-date").val());
            formData.append("Quota", $("#quota").val());
            formData.append("Place", $("#place").val());
            //formData.append("Name", "asdasd");
            //formData.append("Age", "123");
            //formData.append("Times", "10/02/2000");

            fetch('https://localhost:7249/api/events', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
                body: formData,
            })
                .then(response => response.json())
                .then(responseJson => {
                    console.log("berhasil");
                    console.log(responseJson)
                    if (responseJson.status == 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Create Event Failed',
                            text: "Please check your data" ?? "",
                        })
                    }

                    if (responseJson.code == 200) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Event Created',
                            text: "Now you can modify event participant at event controls menu",
                        })
                    }


                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Create Event Failed',
                        text: "Please check your data" ?? "",
                    })
                });
        })
    </script>

    <script>
        $("#place-type").val("@Model.PlaceType");
        $("#visibility").val("@Model.Visibility");


    </script>
}