@model IEnumerable<Client.DTOs.Events.GetEventDto>;
@using Client.Utilities.Enums;
@using System.Security.Claims
@{
    var role = User!.Claims!.FirstOrDefault(c => c.Type == ClaimTypes.Role)!.Value;

    var sortByQuery = Context.Request.Query["sort_by"];
    var visibilityQuery = Context.Request.Query["visibility"];
    var placeTypeQuery = Context.Request.Query["place_type"];
    var publicationStatusQuery = Context.Request.Query["publication_status"];

    var IMAGE_URL = "https://localhost:7249/";

    var toast = TempData["toast"] as dynamic;

    ViewData["Title"] = "Events List";
    Layout = "_LayoutUser";
}


@section Filter{
    <div class="col-auto">
        <div class="btn-group">
            <button type="button"
                    class="btn btn-outline-primary bg-white text-primary dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="false"
                    aria-expanded="false">
                <i class="bx bx-filter"></i> Filter
            </button>
            <div class="dropdown-menu dropdown-menu-end w-px-300">
                <form class="p-4" onsubmit="">
                    <div class="mb-3">
                        <label for="publication" class="form-label">Publication</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="publication-all" name="publication_status" value="all" @(publicationStatusQuery == "all" ? "checked" : "")>
                            <label class="form-check-label" for="publication-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="publication-published" name="publication_status" value="published" @(publicationStatusQuery == "published" ? "checked" : "")>
                            <label class="form-check-label" for="publication-published">Published</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="publication-draft" name="publication_status" value="draft" @(publicationStatusQuery == "draft" ? "checked" : "")>
                            <label class="form-check-label" for="publication-draft">Draft</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="visibility" class="form-label">Visibility</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="visibility-all" name="visibility" value="all" @(visibilityQuery == "all" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="visibility-public" name="visibility" value="public" @(visibilityQuery == "public" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-public">Public</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="visibility-private" name="visibility" value="private" @(visibilityQuery == "private" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-private">Private</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="type" class="form-label">Type</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="type-all" name="place_type" value="all" @(placeTypeQuery == "all"?"checked" : "")>
                            <label class="form-check-label" for="type-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="type-online" name="place_type" value="online" @(placeTypeQuery == "online" ? "checked" : "")>
                            <label class="form-check-label" for="type-online">Online</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="type-offline" name="place_type" value="offline" @(placeTypeQuery == "offline" ? "checked" : "")>
                            <label class="form-check-label" for="type-offline" >Offline</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="sort-by" class="form-label">Sort by</label>
                        <select class="form-select" id="sort-by" name="sort_by">
                            <option  value="newest">Newest</option>
                            <option  value="older">Oldest</option>
                        </select>
                    </div>

                    

                    <button type="submit" class="btn btn-primary" id="btn-apply">Apply</button>
                </form>
            </div>
        </div>
    </div>

    
}

@section Toast{
    @if (toast != null)
    {
        var toastColor = toast.Color ?? "secondary";
        var toastClass = $"bs-toast toast toast-placement-ex m-2 fade bg-{toastColor} top-0 start-50 translate-middle-x";

        <div class="@toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
            <div class="toast-header">
                <i class="bx bx-bell me-2"></i>
                <div class="me-auto fw-semibold">@toast.Title</div>
            </div>
            <div class="toast-body">
                @toast.Subtitle
            </div>
        </div>
    }
}

@if(role == RoleLevel.Company.ToString()){    
        <div class="col-12">
            <div class="alert alert-warning border border-warning" role="alert">The <strong>Published Event</strong> cannot be changed at all, even deletion. Once an event is published, all its details and content are considered final and cannot be change any way.</div>
        </div>        
}

<div id="event-list" class="row">
@if (Model is not null)
{
        var i = -1;
        foreach (var getEvent in Model)
    {
        
            i++;
            var imageUrl = "";
            @if(getEvent.Thumbnail is null || getEvent.Thumbnail == "")
            {
                imageUrl = "../assets/img/elements/12.jpg";
            }
            else
            {
                imageUrl = $"{IMAGE_URL}{getEvent.Thumbnail}";
            }

        <div class="col-md-6 col-lg-4 mb-3">
            <div class="card h-100">
                <img class="card-img-obj card-img-top" src="@(imageUrl)" alt="@(getEvent.Name) by @(getEvent.Organizer)" />
                <div class="card-body">
                    <div class="mb-3">
                        <span class="badge bg-danger text-capitalize">@(getEvent.Visibility)</span>
                        <span class="badge bg-warning text-capitalize">@(getEvent.Category)</span>
                        <span class="badge bg-success text-capitalize">@(getEvent.PlaceType)</span>
                        <span class="badge bg-info text-capitalize">@(getEvent.Payment)</span>
                    </div>
                    @if (getEvent.PublicationStatus == "published")
                    {
                        <h5 class="card-title">@(getEvent.Name)<button type="button" class="badge ms-2 badge-center rounded-pill bg-info border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" title="Published"> <i class="bx bx-check"></i> </button></h5>
                    }
                    else
                    {
                        <h5 class="card-title">@(getEvent.Name)</h5>
                    }

                    <h6 class="small">@(getEvent.StartDate)</h6>
                    <p class="card-text">@(getEvent.Description)</p>
                    <div class="row align-items-center justify-content-center align-self-auto">
                        <div class="col">
                            <div class="h6 mb-1"><del>Rp. @(getEvent.Price + 100000),-</del></div>
                            <div class="h5 text-danger mb-0">Rp. @(getEvent.Price),-</div>
                        </div>
                        <div class="col-auto">

                            @if (getEvent.PublicationStatus != "published")
                            {
                                <div class="btn-group" id="modify-btn">
                                    <button type="button" class="btn btn-outline-primary bg-white text-primary">Options</button>
                                    <button
                                    type="button"
                                    class="btn btn-outline-primary text-primary bg-white dropdown-toggle dropdown-toggle-split"
                                    id="dropdownMenuReference"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false"
                                    data-bs-reference="parent"
                                    >
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuReference">
                                        <li><a class="dropdown-item" href="#" onclick="showEvent(@(i))">
                                                <i class="bx bx-detail me-2"></i> See Details</a></li>
                                        <li><a class="dropdown-item" asp-controller="Event" asp-action="Edit" asp-route-guid="@getEvent.Guid">
                                                <i class="bx bx-pencil me-2"></i> Edit Event</a></li>
                                            <li><a class="dropdown-item" asp-controller="Event" asp-action="Participants" asp-route-eventGuid="@getEvent.Guid"><i class="bx bx-group me-2"></i> Show Participant</a></li>
                                        <li><a href="#" class="dropdown-item" onclick="showParticipants('@(getEvent.Guid)', '@(i)')"><i class="bx bx-group me-2"></i> Edit Participant</a></li>
                                        <li>
                                            <div class="dropdown-item">
                                                <a href="#" class="btn btn-primary text-white btn-block w-100" onclick="PublishEvent('@(getEvent.Guid)')">Publish</a>
                                            </div>
                                        </li>
                                        <li>
                                            <hr class="dropdown-divider" />
                                        </li>
                                        <li>
                                            <a href="#" class="dropdown-item text-danger" id="btn-delete-event" onclick="DeleteEvent('@(getEvent.Guid)')"><i class="bx bx-trash me-2"></i>Delete Event</a>
                                            </li>
                                    </ul>
                                </div>

                            }
                            else
                            {
                                    <a href="#" onclick="showEvent(@(i))" class="btn btn-primary">Details</a>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

</div>





<div class="modal fade" id="event-detail" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header align-items-center">
                <h5 class="mb-0" id="event-detail-name"></h5>

                <div class="col text-end">
                    <span class="badge bg-danger text-capitalize" id="event-detail-type"></span>
                    <span class="badge bg-warning text-capitalize" id="event-detail-category"></span>
                    <span class="badge bg-success text-capitalize" id="event-detail-status"></span>
                    <span class="badge bg-info text-capitalize" id="event-detail-payment"></span>
                </div>

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" ></button>
            </div>
            <div class="modal-body">
                <div class="col-md">
                    <div class="card shadow-none mb-3">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img class="card-img mb-3" src="" alt="" id="event-detail-thumbnail" />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body py-0">
                                    <p class="card-text mb-3" id="event-detail-description"></p>
                                    <p class="card-text mb-3">
                                        <span id="event-detail-startdate"></span> - <span id="event-detail-enddate"></span>
                                    </p>
                                    <p class="card-text mb-1">
                                        Held by <strong><span id="event-detail-organizer"></span></strong>
                                    </p>
                                    <p class="card-text mb-3">
                                        On <strong><span id="event-detail-place"></span></strong>
                                    </p>
                                    <div class="card-text fw-bold mb-1">
                                        <span id="event-detail-joined">0</span> Participants Joined
                                    </div>
                                    <div class="card-text fw-bold text-success mb-1">
                                        <span id="event-detail-quota">0</span> Quota Available
                                    </div>
                                    <div class="h6 mb-3">
                                        <del>Rp. <span id="event-detail-promo">0</span>,-</del>
                                        <span class="text-danger">Rp. <span id="event-detail-price">0</span>,-</span>
                                    </div>

                                    
                                    <a class="btn btn-light shadow-sm" id="btn-show-participants">show participants</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="edit-participants" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
        <div class="modal-content">
            <h3 id="event-name" class="mb-0 text-center mt-4">Event Name</h3>
            <div class="modal-header align-items-center">
                
                <h4 class="mb-0">Edit Participants</h4>

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="position: absolute; right: 30px; top: 40px;" id="btn-close-participants"></button>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-lg-6">
                        <h5 class="fw-semibold text-primary">Companies</h5>
                        <label class="">
                            <input class="form-check-input me-1" type="checkbox" value="" id="select-all-company" />
                            Select all 
                        </label>
                        <div class="demo-inline-spacing mt-3">
                            <div class="list-group" style="height: 400px; overflow: auto;" id="company-list">
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Apple Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Microsoft Corporation
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Amazon.com Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Alphabet Inc. (Google)
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Facebook, Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Tencent Holdings Limited
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Tesla, Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Samsung Electronics Co., Ltd.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Walmart Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Visa Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Visa Inc.
                                </label>
                                 <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Visa Inc.
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Visa Inc.
                                </label>
                            </div>

                        </div>
                    </div>
                    <div class="col-lg-6">
                        <h5 class="fw-semibold text-primary">Employees</h5>
                        <label class="">
                            <input class="form-check-input me-1" type="checkbox" value="" id="select-all-employee" />
                            Select all
                        </label>
                        <div class="demo-inline-spacing mt-3">
                            <div class="list-group" style="height: 400px; overflow: auto;" id="employee-list">
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    John Doe
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Jane Smith
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Michael Johnson
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Emily Brown
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    David Lee
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Sarah Wang
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Robert Garcia
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Laura Martinez
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Christopher Kim
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Amanda Wilson
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer justify-content-between border-top py-3">
                
                <div class="col text-end">
                    <button type="button" class="btn btn-primary" id="btn-update-participants">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .swal2-container {
        z-index: 20000 !important;
    }
</style>

@section Scripts {
    
    <script type="text/javascript">
        const eventsJson = @Html.Raw(ViewData["eventsJson"]);
        const companiesJson = @Html.Raw(ViewData["companiesJson"]);
        const employeesJson = @Html.Raw(ViewData["employeesJson"]);

        console.log(eventsJson);
        console.log(companiesJson);
        console.log(employeesJson);

        const upperPrice = 100000;        

        function showEvent(index) {
            const event = eventsJson.Data[index];

            let eventName = event.Name;

            if (event.PublicationStatus == "published") {
                eventName = event.Name + `<button type="button" class="badge ms-2 badge-center rounded-pill bg-info border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" title="Published"> <i class="bx bx-check"></i> </button>`;
            }

            let imageUrl = "";

            if (event.Thumbnail == null || event.Thumbnail == ""){
                imageUrl = "../assets/img/elements/12.jpg";
            }else{
                imageUrl = `@(IMAGE_URL)${event.Thumbnail}`;
            }

            $("#event-detail-name").html(eventName);
            $("#event-detail-thumbnail").attr("src", imageUrl).attr("alt", event.Name + " by " + event.Organizer);
            $("#event-detail-description").text(event.Description);
            $("#event-detail-startdate").text(event.StartDate);
            $("#event-detail-enddate").text(event.EndDate);
            $("#event-detail-organizer").text(event.Organizer);
            $("#event-detail-place").text(event.Place);
            $("#event-detail-joined").text(event.Joined);
            $("#event-detail-promo").text(event.Price + upperPrice);
            $("#event-detail-price").text(event.Price);

            $("#event-detail-type").text(event.Visibility);
            $("#event-detail-category").text(event.Category);
            $("#event-detail-status").text(event.PlaceType);
            $("#event-detail-payment").text(event.Payment);

            if(event.PublicationStatus == "published"){
                $("#event-detail-joined").parent().hide();
                $("#event-detail-quota").text(event.Quota);
            }
            else{
                $("#event-detail-joined").parent().show();
                $("#event-detail-quota").text(event.Quota - event.Joined);
            }

            // asp-controller="Event" asp-action="Participants" participants?eventGuid=
            //$("#btn-show-participants").attr("asp-controller", "Event");
            //$("#btn-show-participants").attr("asp-action", "Participants");
            //$("#btn-show-participants").attr("asp-route-eventGuid", event.Guid);
            $("#btn-show-participants").attr("href", `/participants?eventGuid=${event.Guid}`);

            $("#event-detail").modal('show');
        }

        

        $("#btn-close-participants").on("click", function(){
            $("#select-all-company").prop("checked", false);
            $("#select-all-employee").prop("checked", false);
        })

        async function showParticipants(eventGuid, indexEvent) {
            console.log(eventGuid);
            const event = eventsJson.Data[indexEvent];

            $("#event-name").html(`<h3>${event.Name}</h3>`)

            const responseCompanyParticipants = await GetCompanyParticipantEvent(eventGuid);
            const responseEmployeeParticipants = await GetEmployeeParticipantEvent(eventGuid);
            let companyParticipantsEvent = responseCompanyParticipants.data;
            let employeeParticipantsEvent = responseEmployeeParticipants.data;

            console.log(responseCompanyParticipants);
            console.log(companyParticipantsEvent);

            let companyParticipantEventGuids = companyParticipantsEvent.map(cpe => cpe.companyGuid);
            let employeeParticipantEventGuids = employeeParticipantsEvent.map(epe => epe.employeeGuid);

            console.log(companyParticipantEventGuids);
            console.log(employeeParticipantEventGuids);


            const companies = companiesJson.Data;
            const employees = employeesJson.Data;

            let listCompanyElems = "";

            companies.forEach(company => {

                
                listCompanyElems += `
                        <label class="list-group-item">
                            <input class="form-check-input me-1 company-item" type="checkbox" value="${company.Guid}" ${companyParticipantEventGuids.includes(company.Guid) ? "checked" : ""} />
                            ${company.Name}
                        </label>
                `
            });

            let listEmployeeElems = "";

            employees.forEach(employee => {

                listEmployeeElems += `
                        <label class="list-group-item">
                            <input class="form-check-input me-1 employee-item" type="checkbox" value="${employee.Guid}" ${employeeParticipantEventGuids.includes(employee.Guid) ? "checked" : ""} />
                            ${employee.FullName}
                        </label>
                `
            })

            $("#company-list").html(listCompanyElems);
            $("#employee-list").html(listEmployeeElems);


            $("#select-all-company").on("click", function(){
                if($(this).prop("checked")){
                    $(".company-item").prop("checked", true)
                }else{
                    $(".company-item").prop("checked", false)
                }
            })

            $("#select-all-employee").on("click", function () {
                if ($(this).prop("checked")) {
                    $(".employee-item").prop("checked", true)
                } else {
                    $(".employee-item").prop("checked", false)
                }
            })

            $("#edit-participants").modal('show');

            const btnUpdateParticipants = document.getElementById("btn-update-participants");
            console.log("btn update participants : ", btnUpdateParticipants)

            btnUpdateParticipants.onclick = async function(e){
                this.innerHTML = `
                    <div class="spinner-border text-info" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                `;
                let companyParticipantsGuids = [];
                let employeeParticipantsGuids = [];

                $(".company-item").each(function (index, element) {
                    if($(this).prop("checked")){
                    companyParticipantsGuids.push($(this).val());

                    }
                })

                $(".employee-item").each(function (index, element) {
                    if ($(this).prop("checked")) {
                        employeeParticipantsGuids.push($(this).val());
                    }
                    
                })

                console.log(companyParticipantsGuids)
                console.log(employeeParticipantsGuids)

                const updateParticipantsEventDto = {
                    EventGuid: eventGuid,
                    CompanyParticipantsGuids: companyParticipantsGuids,
                    EmployeeParticipantsGuids: employeeParticipantsGuids,
                };

                const response = await UpdateParticipantsEvent(updateParticipantsEventDto);
                console.log(response);

                if (response.code == 200){
                    Swal.fire({
                        icon: 'success',
                        title: 'Successfully update participants event',
                    })
                    
                }

                if (response.code == 400){
                    Swal.fire({
                        icon: 'error',
                        title: 'Update Event Participants Failed',
                        text: "Please check your data",
                    })
                }

                this.innerHTML = "Save Changes";
            }
            //$("#btn-update-participants").on("click", async function(){
                
            //})

        }
        
        const API_URL = "https://localhost:7249/api";

        function GetCompanyParticipantEvent(eventGuid){
            return  fetch(`${API_URL}/events/participants/companies/event?guid=${eventGuid}`,{
                method: 'GET',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
            }).then(response => response.json())
            .catch(err => {message: "something error"});
        }

        function GetEmployeeParticipantEvent(eventGuid) {
            return fetch(`${API_URL}/events/participants/employees/event?guid=${eventGuid}`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
            }).then(response => response.json())
                .catch(err => { message: "something error" });
        }

        function UpdateParticipantsEvent(updateParticipantsEventDto) {
            console.log(updateParticipantsEventDto)
            return fetch(`${API_URL}/events/participants`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updateParticipantsEventDto),
            }).then(response => response.json())
                .catch(err => {
                    console.log(err)
                    return { message: "something error" }
                });
        }

        function DeleteEvent(eventGuid){

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`${API_URL}/events?guid=${eventGuid}`, {
                        method: 'DELETE',
                        headers: {
                            'Authorization': `Bearer @(ViewData["token"])`,
                        },
                    }).then(response => response.json())
                        .then(responseJson => {
                            console.log(responseJson)
                            if (responseJson.code == 200) {
                                Swal.fire({
                                    icon: 'success',
                                    title: `Successfully delete event ${responseJson.data.name}`,
                                }).then(result => location.reload(true))
                                

                            }

                            if (responseJson.code == 400) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Deleted event Failed',
                                    text: "Please check your data",
                                })
                            }
                        })
                        .catch(err => {
                            console.log(err)
                            Swal.fire({
                                icon: 'error',
                                title: 'Deleted event Failed',
                                text: "Please check your data",
                            })
                        });
                }
            })
            
            
        }

        function PublishEvent(eventGuid){
            
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, publish it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`${API_URL}/events/publish?guid=${eventGuid}`, {
                        method: 'PUT',
                        headers: {
                            'Authorization': `Bearer @(ViewData["token"])`,
                        },
                    }).then(response => response.json())
                        .then(responseJson => {
                            console.log(responseJson)
                            if (responseJson.code == 200) {
                                Swal.fire({
                                    icon: 'success',
                                    title: `Successfully publish event '${responseJson.data}'`,
                                }).then(result => location.reload(true))


                            }

                            if (responseJson.code == 400) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Publish event Failed',
                                    text: "Please check your data",
                                })
                            }
                        })
                        .catch(err => {
                            console.log(err)
                            Swal.fire({
                                icon: 'error',
                                title: 'Publish event Failed',
                                text: "Please check your data",
                            })
                        });
                }
            })
                               
        }
     

    </script>

    <script>
        $("#sort-by").val("@sortByQuery")

        
    </script>
}