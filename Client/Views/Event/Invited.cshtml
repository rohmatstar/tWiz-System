@model List<Client.DTOs.Events.GetInvitationEventDto>;
@using System.Security.Claims;

@{
    var toast = TempData["toast"] as dynamic;

    var role = User!.Claims!.FirstOrDefault(c => c.Type == ClaimTypes.Role)!.Value;

    var sortByQuery = Context.Request.Query["sort_by"];
    var visibilityQuery = Context.Request.Query["visibility"];
    var placeTypeQuery = Context.Request.Query["place_type"];
    var publicationStatusQuery = Context.Request.Query["publication_status"];

    var IMAGE_URL = "https://localhost:7249/";

    ViewData["Title"] = "Invited Events";
    Layout = "_LayoutUser";
}

@section Filter{
    <div class="col-auto">
        <div class="btn-group">
            <button type="button"
                    class="btn btn-outline-primary bg-white text-primary dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="false"
                    aria-expanded="false">
                <i class="bx bx-filter"></i> Filter
            </button>
            <div class="dropdown-menu dropdown-menu-end w-px-300">
                <form class="p-4" onsubmit="">
                    <div class="mb-3">
                        <label for="publication" class="form-label">Publication</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="publication-all" name="publication_status" value="all" @(publicationStatusQuery == "all" ? "checked" : "")>
                            <label class="form-check-label" for="publication-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="publication-published" name="publication_status" value="published" @(publicationStatusQuery == "published" ? "checked" : "")>
                            <label class="form-check-label" for="publication-published">Published</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="publication-draft" name="publication_status" value="draft" @(publicationStatusQuery == "draft" ? "checked" : "")>
                            <label class="form-check-label" for="publication-draft">Draft</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="visibility" class="form-label">Visibility</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="visibility-all" name="visibility" value="all" @(visibilityQuery == "all" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="visibility-public" name="visibility" value="public" @(visibilityQuery == "public" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-public">Public</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="visibility-private" name="visibility" value="private" @(visibilityQuery == "private" ? "checked" : "")>
                            <label class="form-check-label" for="visibility-private">Private</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="type" class="form-label">Type</label>
                        <div class="form-check">
                            <input checked type="radio" class="form-check-input" id="type-all" name="place_type" value="all" @(placeTypeQuery == "all" ? "checked" : "")>
                            <label class="form-check-label" for="type-all">All</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="type-online" name="place_type" value="online" @(placeTypeQuery == "online" ? "checked" : "")>
                            <label class="form-check-label" for="type-online">Online</label>
                        </div>
                        <div class="form-check">
                            <input type="radio" class="form-check-input" id="type-offline" name="place_type" value="offline" @(placeTypeQuery == "offline" ? "checked" : "")>
                            <label class="form-check-label" for="type-offline">Offline</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="sort-by" class="form-label">Sort by</label>
                        <select class="form-select" id="sort-by" name="sort_by">
                            <option value="newest">Newest</option>
                            <option value="older">Oldest</option>
                        </select>
                    </div>



                    <button type="submit" class="btn btn-primary" id="btn-apply">Apply</button>
                </form>
            </div>
        </div>
    </div>

}

@section Toast{
    @if (toast != null)
    {
        var toastColor = toast.Color ?? "secondary";
        var toastClass = $"bs-toast toast toast-placement-ex m-2 fade bg-{toastColor} top-0 start-50 translate-middle-x";

        <div class="@toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
            <div class="toast-header">
                <i class="bx bx-bell me-2"></i>
                <div class="me-auto fw-semibold">@toast.Title</div>
            </div>
            <div class="toast-body">
                @toast.Subtitle
            </div>
        </div>
    }
}


<div class="row" id="event-list">

@if (Model is not null)
{
    var i = -1;
    foreach (var getEvent in Model)
    {
        i++;
        var imageUrl = "";
        @if (getEvent.Thumbnail is null || getEvent.Thumbnail == "")
        {
            imageUrl = "../assets/img/elements/12.jpg";
        }
        else
        {
            imageUrl = $"{IMAGE_URL}{getEvent.Thumbnail}";
        }
        <div class="col-md-6 col-lg-4 mb-3">
            <div class="card h-100">
                <img class="card-img-obj card-img-top" src="@(imageUrl)" alt="@(getEvent.Name) by @(getEvent.Organizer)" />
                <div class="card-body">
                    <div class="mb-3">
                        <span class="badge bg-danger text-capitalize">@(getEvent.Visibility)</span>
                        <span class="badge bg-warning text-capitalize">@(getEvent.Category)</span>
                        <span class="badge bg-success text-capitalize">@(getEvent.PlaceType)</span>
                        <span class="badge bg-info text-capitalize">@(getEvent.Payment)</span>
                    </div>
                    @if (getEvent.InvitationStatus == "accepted")
                    {
                            <h5 class="card-title">@(getEvent.Name)<button title="joined" type="button" class="badge ms-2 badge-center rounded-pill bg-success border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" > <i class="bx bx-check"></i> </button></h5>
                    }else if (getEvent.InvitationStatus == "rejected"){
                            <h5 class="card-title">@(getEvent.Name)<button title="rejected" type="button" class="badge ms-2 badge-center rounded-pill bg-danger border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" > <i class="bx bx-x"></i> </button></h5>
                    }else if(getEvent.InvitationStatus == "checking")
                    {
                        <h5 class="card-title">@(getEvent.Name)<button title="checking" type="button" class="badge ms-2 badge-center rounded-pill bg-warning border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true"> <i class="bx bx-search-alt-2"></i> </button></h5>
                    }
                    else
                    {
                        <h5 class="card-title">@(getEvent.Name)</h5>
                    }

                    <h6 class="small">@(getEvent.StartDate)</h6>
                    <p class="card-text">@(getEvent.Description)</p>
                    <div class="row align-items-center justify-content-center align-self-auto">
                        <div class="col">
                            <div class="h6 mb-1"><del>Rp. @(getEvent.Price + 100000),-</del></div>
                            <div class="h5 text-danger mb-0">Rp. @(getEvent.Price),-</div>
                        </div>
                        <div class="col-auto">

                            @if (getEvent.InvitationStatus == "accepted" && role == "Company")
                            {
                                <div class="btn-group" id="modify-btn">
                                    <button type="button" class="btn btn-outline-primary bg-white text-primary">Options</button>
                                    <button type="button"
                                            class="btn btn-outline-primary text-primary bg-white dropdown-toggle dropdown-toggle-split"
                                            id="dropdownMenuReference"
                                            data-bs-toggle="dropdown"
                                            aria-expanded="false"
                                            data-bs-reference="parent">
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuReference">
                                        <li>
                                            <a class="dropdown-item" href="#" onclick="showEvent(@(i))">
                                                <i class="bx bx-detail me-2"></i> See Details
                                            </a>
                                        </li>
                                        <li><a class="dropdown-item" asp-controller="Event" asp-action="Participants" asp-route-eventGuid="@getEvent.Guid"><i class="bx bx-group me-2"></i> Show Participant</a></li>
                                        <li><a href="#" class="dropdown-item" onclick="showParticipants('@(getEvent.Guid)', '@(i)')"><i class="bx bx-group me-2"></i> Edit Participant</a></li>
                                    </ul>
                                </div>

                            }
                            else
                            {
                                <a href="#" onclick="showEvent(@(i))" class="btn btn-outline-primary">Details</a>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    
    }
}
</div>


<!-- Modals -->
<div class="modal fade" id="event-detail" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header align-items-center">
                <h5 class="mb-0" id="event-detail-name"></h5>

                <div class="col text-end">
                    <span class="badge bg-danger" id="event-detail-type"></span>
                    <span class="badge bg-warning" id="event-detail-category"></span>
                    <span class="badge bg-success" id="event-detail-status"></span>
                    <span class="badge bg-info" id="event-detail-payment"></span>
                </div>

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="col-md">
                    <div class="card shadow-none mb-3">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img class="card-img mb-3" src="" alt="" id="event-detail-thumbnail" />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body py-0">
                                    <p class="card-text mb-3" id="event-detail-description"></p>
                                    <p class="card-text mb-3">
                                        <span id="event-detail-startdate"></span> - <span id="event-detail-enddate"></span>
                                    </p>
                                    <p class="card-text mb-1">
                                        Held by <strong><span id="event-detail-organizer"></span></strong>
                                    </p>
                                    <p class="card-text mb-3">
                                        On <strong><span id="event-detail-place"></span></strong>
                                    </p>
                                    <div class="card-text fw-bold mb-1">
                                        <span id="event-detail-joined">0</span> Participants Joined
                                    </div>
                                    <div class="card-text fw-bold text-success mb-1">
                                        <span id="event-detail-quota">0</span> Quota Available
                                    </div>
                                    <div class="h6 mb-3">
                                        <del>Rp. <span id="event-detail-promo">0</span>,-</del>
                                        <span class="text-danger">Rp. <span id="event-detail-price">0</span>,-</span>
                                    </div>

                                    
                                    <a href="#" class="btn btn-primary" id="btn-join">Join</a>
                                    <a href="#" class="btn btn-outline-danger" id="btn-reject">Not Now</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="edit-participants" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" role="document">
        <div class="modal-content">
            <h3 id="event-name" class="mb-0 text-center mt-4">Event Name</h3>
            <div class="modal-header align-items-center">

                <h4 class="mb-0">Edit Participants</h4>

                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="position: absolute; right: 30px; top: 40px;" id="btn-close-participants"></button>
            </div>
            <div class="modal-body">

                <div class="row">
                    
                    <div class="col-lg-12">
                        <h5 class="fw-semibold text-primary">Employees</h5>
                        <label class="">
                            <input class="form-check-input me-1" type="checkbox" value="" id="select-all-employee" />
                            Select all
                        </label>
                        <div class="demo-inline-spacing mt-3">
                            <div class="list-group" style="height: 400px; overflow: auto;" id="employee-list">
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    John Doe
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Jane Smith
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Michael Johnson
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Emily Brown
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    David Lee
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Sarah Wang
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Robert Garcia
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Laura Martinez
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Christopher Kim
                                </label>
                                <label class="list-group-item">
                                    <input class="form-check-input me-1" type="checkbox" value="" />
                                    Amanda Wilson
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer justify-content-between border-top py-3">

                <div class="col text-end">
                    <button type="button" class="btn btn-primary" id="btn-update-participants">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        const eventsJson = @Html.Raw(ViewData["eventsJson"]);
        const employeesJson = @Html.Raw(ViewData["employeesJson"]);

        console.log(eventsJson);
        console.log(employeesJson);        

        const upperPrice = 100000;
        const API_URL = "https://localhost:7249/api";

        function showEvent(index) {
            const event = eventsJson.Data[index];
            console.log(event);

            const btnJoin = document.getElementById("btn-join");
            const btnReject = document.getElementById("btn-reject");

            //btnJoin.style.display = "inherit";
            //btnReject.style.display = "inherit";

            $("#btn-join").show();
            $("#btn-reject").show();

            let eventName = event.Name;

            if (event.InvitationStatus == "accepted"){
                eventName = event.Name + `<button type="button" class="badge ms-2 badge-center rounded-pill bg-success border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" title="Joined"> <i class="bx bx-check"></i> </button>`;
            }else if(event.InvitationStatus == "rejected"){
                eventName = event.Name + `<button type="button" class="badge ms-2 badge-center rounded-pill bg-danger border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" title="Rejected"> <i class="bx bx-x"></i> </button>`;
            }else if (event.InvitationStatus == "checking"){
                eventName = event.Name + `<button type="button" class="badge ms-2 badge-center rounded-pill bg-warning border-0" data-bs-toggle="popover" data-bs-offset="0,4" data-bs-placement="right" data-bs-html="true" title="Checking"> <i class="bx bx-search-alt-2"></i> </button>`;
            }

            let imageUrl = "";

            if (event.Thumbnail == null || event.Thumbnail == "") {
                imageUrl = "../assets/img/elements/12.jpg";
            } else {
                imageUrl = `@(IMAGE_URL)${event.Thumbnail}`;
            }

            $("#event-detail-name").html(eventName);
            $("#event-detail-thumbnail").attr("src", imageUrl).attr("alt", event.Name + " by " + event.Organizer);
            $("#event-detail-description").text(event.Description);
            $("#event-detail-startdate").text(event.StartDate);
            $("#event-detail-enddate").text(event.EndDate);
            $("#event-detail-organizer").text(event.Organizer);
            $("#event-detail-place").text(event.Place);
            $("#event-detail-joined").text(event.Joined);
            $("#event-detail-promo").text(event.Price + upperPrice);
            $("#event-detail-price").text(event.Price);

            $("#event-detail-type").text(event.Visibility);
            $("#event-detail-category").text(event.Category);
            $("#event-detail-status").text(event.PlaceType);
            $("#event-detail-payment").text(event.Payment);

            $("#event-detail-joined").parent().show();
            $("#event-detail-quota").text(event.Quota - event.Joined);

            

            if (event.InvitationStatus == "accepted" || event.Jonied == event.Quota){
                //btnJoin.style.display = "none";
                //btnReject.style.display = "none";
                $("#btn-join").hide();
                $("#btn-reject").hide();
            }

            if (event.PaymentGuid == null && event.InvitationStatus != "accepted"){
                btnJoin.onclick = async function (){
                    approveEvent(event.Guid);
                    console.log("approve")
                }

                
            }else if(event.PaymentGuid != null){
                btnJoin.onclick = function (){
                    location.href = `/EventPayment/Index?guid=${event.PaymentGuid}`
                }
            }

            btnReject.onclick = function () {
                rejectEvent(event.Guid);
                console.log("reject")
            }

            $("#event-detail").modal('show');
        }

        async function showParticipants(eventGuid, indexEvent) {
            console.log(eventGuid);
            const event = eventsJson.Data[indexEvent];

            $("#event-name").html(`<h3>${event.Name}</h3>`)

            const responseEmployeeParticipants = await GetEmployeeParticipantEvent(eventGuid);
            let employeeParticipantsEvent = responseEmployeeParticipants.data;

            let employeeParticipantEventGuids = employeeParticipantsEvent.map(epe => epe.employeeGuid);

            console.log(employeeParticipantEventGuids);

            const employees = employeesJson.Data;
            
            let listEmployeeElems = "";

            employees.forEach(employee => {

                listEmployeeElems += `
                                <label class="list-group-item">
                                    <input class="form-check-input me-1 employee-item" type="checkbox" value="${employee.Guid}" ${employeeParticipantEventGuids.includes(employee.Guid) ? "checked" : ""} />
                                    ${employee.FullName}
                                </label>
                        `
            })

            $("#employee-list").html(listEmployeeElems);


            $("#select-all-employee").on("click", function () {
                if ($(this).prop("checked")) {
                    $(".employee-item").prop("checked", true)
                } else {
                    $(".employee-item").prop("checked", false)
                }
            })

            $("#edit-participants").modal('show');

            const btnUpdateParticipants = document.getElementById("btn-update-participants");
            console.log("btn update participants : ", btnUpdateParticipants)

            btnUpdateParticipants.onclick = async function (e) {
                this.innerHTML = `
                            <div class="spinner-border text-info" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        `;

                let employeeParticipantsGuids = [];

                $(".employee-item").each(function (index, element) {
                    if ($(this).prop("checked")) {
                        employeeParticipantsGuids.push($(this).val());
                    }

                })

 
                console.log(employeeParticipantsGuids)

                const updateEmployeeParticipantsEventDto = {
                    EventGuid: eventGuid,
                    EmployeesGuids: employeeParticipantsGuids,
                };

                const response = await UpdateCompanyEmployeeParticipantsEvent(updateEmployeeParticipantsEventDto);
                console.log(response);

                if (response.code == 200) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Successfully update company employee participants event',
                    })

                }

                if (response.code == 400) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Update company employee participants event Failed',
                        text: "Please check your data",
                    })
                }

                this.innerHTML = "Save Changes";
            }
            //$("#btn-update-participants").on("click", async function(){

            //})

        }

        function approveEvent(eventGuid){
            fetch(`${API_URL}/events/approve-event?eventGuid=${eventGuid}`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
            }).then(response => response.json())
                .then(responseJson => {
                    console.log(responseJson)
                    if (responseJson.code == 200) {
                        Swal.fire({
                            icon: 'success',
                            title: `Successfully approve event`,
                        }).then(result => location.reload(true))


                    }

                    if (responseJson.code == 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Approve event Failed',
                            text: "Please check your data",
                        })
                    }
                })
                .catch(err => {
                    console.log(err)
                    Swal.fire({
                        icon: 'error',
                        title: 'Approve event Failed',
                        text: "Please check your data",
                    })
                });
        }

        function rejectEvent(eventGuid) {
            fetch(`${API_URL}/events/reject-event?eventGuid=${eventGuid}`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
            }).then(response => response.json())
                .then(responseJson => {
                    console.log(responseJson)
                    if (responseJson.code == 200) {
                        Swal.fire({
                            icon: 'success',
                            title: `Successfully reject event`,
                        }).then(result => location.reload(true))


                    }

                    if (responseJson.code == 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Approve event Failed',
                            text: "Please check your data",
                        })
                    }
                })
                .catch(err => {
                    console.log(err)
                    Swal.fire({
                        icon: 'error',
                        title: 'Approve event Failed',
                        text: "Please check your data",
                    })
                });
        }

        function GetEmployeeParticipantEvent(eventGuid) {
            return fetch(`${API_URL}/events/participants/employees/event?guid=${eventGuid}`, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                },
            }).then(response => response.json())
                .catch(err => { message: "something error" });
        }

        function UpdateCompanyEmployeeParticipantsEvent(updateEmployeeParticipantsDto) {
            console.log(updateEmployeeParticipantsDto)
            return fetch(`${API_URL}/events/participants/employees/company-employee`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(ViewData["token"])`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updateEmployeeParticipantsDto),
            }).then(response => response.json())
                .catch(err => {
                    console.log(err)
                    return { message: "something error" }
                });
        }

    </script>

    <script>
        $("#sort-by").val("@sortByQuery")

    </script>
}