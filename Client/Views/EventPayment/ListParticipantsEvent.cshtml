@model Client.DTOs.EventPayments.GetParticipantsPaidEventDto;
@using System.Globalization;
@{
    var companyGuid = User!.Claims!.FirstOrDefault(c => c.Type == "companyGuid")!.Value;
    var jwtToken = Context.Session.GetString("JWTToken")!.ToString();
    var IMAGE_URL = "https://localhost:7249/";
    ViewData["Title"] = "Paid Events";
    Layout = "_LayoutUser";
}



@if(Model is not null){
    var i = 1;
    var j = 1;
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item "><a asp-action="PaidEvent" class="text-primary">Event Payment</a></li>
            <li class="breadcrumb-item active" aria-current="page">@(Model.EventName)</li>
        </ol>
    </nav>

    <h4 class="mb-3 mt-5">Company Participants</h4>

    <table class="table table-responsive table-striped table-hover" id="company-table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Presence</th>
                <th scope="col">Invitation Status</th>
                <th scope="col">Proof of Payment</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var companyParticipant in Model.CompanyParticipantsPaidEvent)
            {
                <tr>
                    <th scope="row">@(i++)</th>
                    <td>@companyParticipant.CompanyName</td>
                    <td>@(companyParticipant.IsPresent == true ? "present" : "not present")</td>
                    <td>@companyParticipant.InvitationStatus</td>
                    <td>
                        <a href="@(IMAGE_URL)@(companyParticipant.PaymentImageUrl)" target="_blank"><i class="bx bx-image"></i></a>
                    </td>
                    <td>
                        @if(companyParticipant.InvitationStatus != "accepted")
                        {
                            <button class="btn btn-primary btn-sm" id="btn-approve-company" onclick="ApproveEventPayment('@(companyParticipant.EventPaymentGuid)')">Approve</button>
                        }

                        <button class="btn btn-danger btn-sm" id="btn-reject-company" onclick="RejectEventPayment('@(companyParticipant.EventPaymentGuid)')">Reject</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>


    <h4 class="mb-3 mt-5">Employee Participants</h4>

    <table class="table table-responsive table-striped table-hover" id="employee-table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Employee Name</th>
                <th scope="col">Company Name</th>
                <th scope="col">Presence</th>
                <th scope="col">Invitation Status</th>
                <th scope="col">Proof of Payment</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var employeeParticipant in Model.EmployeeParticipantsPaidEvent)
            {
                <tr>
                    <th scope="row">@(j++)</th>
                    <td>@employeeParticipant.EmployeeName</td>
                    <td>@employeeParticipant.CompanyName</td>
                    <td>@(employeeParticipant.IsPresent == true ? "present" : "not present")</td>
                    <td>@employeeParticipant.InvitationStatus</td>
                    <td>
                        <a href="@(IMAGE_URL)@(employeeParticipant.PaymentImageUrl)" target="_blank"><i class="bx bx-image"></i></a>
                    </td>
                    <td>
                        @if (employeeParticipant.InvitationStatus != "accepted")
                        {
                            <button class="btn btn-primary btn-sm" id="btn-approve-company" onclick="ApproveEventPayment('@(employeeParticipant.EventPaymentGuid)')">Approve</button>
                        }

                        <button class="btn btn-danger btn-sm" id="btn-reject-company" onclick="RejectEventPayment('@(employeeParticipant.EventPaymentGuid)')">Reject</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}


@section Scripts{
    <script>
        const API_URL = "https://localhost:7249/api";
        function ApproveEventPayment(eventPaymentGuid) {

            const data = {
                guid: eventPaymentGuid
            }
            fetch(`${API_URL}/event-payments/validation?status=approve`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(jwtToken)`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data),
            }).then(response => response.json())
                .then(responseJson => {
                    if (responseJson.code == 200) {
                        Swal.fire({
                            icon: 'success',
                            title: `Successfully approve event`,
                        }).then(result => location.reload(true))


                    }

                    if (responseJson.code == 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Approve event Failed',
                            text: "Please check your data",
                        })
                    }
                })
                .catch(err => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Approve event Failed',
                        text: "Please check your data",
                    })
                });
        }

        function RejectEventPayment(eventPaymentGuid) {

            const data = {
                guid: eventPaymentGuid
            }
            fetch(`${API_URL}/event-payments/validation?status=reject`, {
                method: 'PUT',
                headers: {
                    'Authorization': `Bearer @(jwtToken)`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data),
            }).then(response => response.json())
                .then(responseJson => {
                    if (responseJson.code == 200) {
                        Swal.fire({
                            icon: 'success',
                            title: `Successfully reject event`,
                        }).then(result => location.reload(true))


                    }

                    if (responseJson.code == 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Reject event Failed',
                            text: "Please check your data",
                        })
                    }
                })
                .catch(err => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Reject event Failed',
                        text: "Please check your data",
                    })
                });
        }
    </script>
       
}